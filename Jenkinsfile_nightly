#!groovy

properties([
// H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
pipelineTriggers([cron('H 8 * * 1-5')]),
parameters([
        string(name: 'TEST_URL', defaultValue: 'https://et-sya.aat.platform.hmcts.net', description: 'The URL you want to run tests against'),
        string(name: 'ZAP_URL_EXCLUSIONS', defaultValue: "-config globalexcludeurl.url_list.url\\(1\\).regex='.*/assets.*' -config globalexcludeurl.url_list.url\\(2\\).regex='.*/cookies.*' -config globalexcludeurl.url_list.url\\(3\\).regex='.*/main.[a-fA-F0-9]{20}.js' -config globalexcludeurl.url_list.url\\(4\\).regex='.*/main.[a-fA-F0-9]{20}.css' -config globalexcludeurl.url_list.url\\(5\\).regex='.*/sitemap.xml(\\?lng=en)?' -config globalexcludeurl.url_list.url\\(6\\).regex='.*/robots.txt' -config globalexcludeurl.url_list.url\\(7\\).regex='.*/accessibility.*' -config rules.cookie.ignorelist=_ga,_gid,_gat,dtCookie,dtLatC,dtPC,dtSa,rxVisitor,rxvt,i18next,et-sya-session")
    ])
])

@Library("Infrastructure")

def type = "nodejs"
def product = "et"
def component = "sya"
def urlExclusions = params.ZAP_URL_EXCLUSIONS
def secrets = [
    'et-aat': [
        secret('et-citizen-10-user-name', 'TEST_CASE_USERNAME'),
        secret('et-citizen-10-password', 'TEST_CASE_PASSWORD')
    ]
]
static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}


withNightlyPipeline(type, product, component) {
    loadVaultSecrets(secrets)
    //enableSecurityScan(
       //urlExclusions: urlExclusions
    //)
    enableFullFunctionalTest(int timeout=300)
    enableCrossBrowserTest()
    enableFortifyScan('et-aat')

    env.TEST_URL = params.TEST_URL
    env.RUNNING_ENV = params.ENVIRONMENT

    afterAlways('crossBrowserTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
        enableSlackNotifications('#et-builds')
    }

    before('fullFunctionalTest') {
        sh """
           yarn playwright install
        """
    }

    afterAlways('fullFunctionalTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'

        publishHTML target: [
                allowMissing : true,
                alwaysLinkToLastBuild: true,
                keepAll : true,
                reportDir : "functional-output/reports/",
                reportFiles : "ET-sya-functional-tests.html",
                reportName : "ET SYA Functional Tests Report"
        ]
        //enableSlackNotification('#et-builds')
    }

    afterSuccess('fortify-scan') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'
    }

}
