#!groovy

properties([
// H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
pipelineTriggers([cron('H 8 * * 1-5')]),
parameters([
        string(name: 'TEST_URL', defaultValue: 'https://et-sya.aat.platform.hmcts.net', description: 'The URL you want to run tests against'),
        string(name: 'ZAP_URL_EXCLUSIONS', defaultValue: "-config globalexcludeurl.url_list.url\\(1\\).regex=\\'.jquery-3.5.1.min.js${'$'}\\' -config globalexcludeurl.url_list.url\\(2\\).regex=\\'.*assets/images.*\\' -config globalexcludeurl.url_list.url\\(3\\).regex=\\'.*/assets/stylesheets.*\\' -config globalexcludeurl.url_list.url\\(4\\).regex=\\'.*/assets/javascripts.*\\' -config globalexcludeurl.url_list.url\\(5\\).regex=\\'.*/ruxitagentjs_.*\\' -config globalexcludeurl.url_list.url\\(6\\).regex=\\'.*/terms-and-conditions.*\\' -config globalexcludeurl.url_list.url\\(7\\).regex=\\'.*/privacy-policy.*\\' -config globalexcludeurl.url_list.url\\(8\\).regex=\\'.*/contact-us.*\\' -config globalexcludeurl.url_list.url\\(9\\).regex=\\'.*/login.*\\' -config globalexcludeurl.url_list.url\\(10\\).regex=\\'.*/cookies.*\\' -config globalexcludeurl.url_list.url\\(11\\).regex=\\'.*/cookie-preferences.*\\' -config globalexcludeurl.url_list.url\\(12\\).regex=\\'.*jquery-3.4.1.min.js${'$'}\\' -config globalexcludeurl.url_list.url\\(13\\).regex=\\'.*/main.5591ca8b4d44803f7d62.js${'$'}\\' -config globalexcludeurl.url_list.url\\(14\\).regex=\\'.*/main\\.[a-fA-F0-9]{16,}\\.js(\\?lng=(en|cy))?${'$'}\\' -config globalexcludeurl.url_list.url\\(15\\).regex=\\'.*/assets.*\\'")
     ])
])

@Library("Infrastructure")

def type = "nodejs"
def product = "et"
def component = "sya"
def urlExclusions = params.ZAP_URL_EXCLUSIONS
def secrets = [
    'et-aat': [
        secret('et-citizen-10-user-name', 'TEST_CASE_USERNAME'),
        secret('et-citizen-10-password', 'TEST_CASE_PASSWORD')
    ]
]
static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

echo "Starting the nightly pipeline for ${product} - ${component}. These are the urlExclusions: ${urlExclusions}"

withNightlyPipeline(type, product, component) {
    loadVaultSecrets(secrets)
    enableSecurityScan(
       urlExclusions: urlExclusions
    )
    enableFullFunctionalTest(int timeout=300)
    enableCrossBrowserTest()
    enableFortifyScan('et-aat')

    env.TEST_URL = params.TEST_URL
    env.RUNNING_ENV = params.ENVIRONMENT

    afterAlways('crossBrowserTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
        enableSlackNotifications('#et-builds')
    }

    before('fullFunctionalTest') {
        sh """
           yarn playwright install
        """
    }

    afterAlways('fullFunctionalTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'

        publishHTML target: [
                allowMissing : true,
                alwaysLinkToLastBuild: true,
                keepAll : true,
                reportDir : "functional-output/reports/",
                reportFiles : "ET-sya-functional-tests.html",
                reportName : "ET SYA Functional Tests Report"
        ]
        //enableSlackNotification('#et-builds')
    }

    afterSuccess('fortify-scan') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'
    }
}
